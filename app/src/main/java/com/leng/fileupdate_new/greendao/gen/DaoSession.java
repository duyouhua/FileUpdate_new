package com.leng.fileupdate_new.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.leng.fileupdate_new.Bean.FileUser;
import com.leng.fileupdate_new.Bean.FileUser2;
import com.leng.fileupdate_new.Bean.FileUserBeanManger;
import com.leng.fileupdate_new.Bean.FileUserRevocation;

import com.leng.fileupdate_new.greendao.gen.FileUserDao;
import com.leng.fileupdate_new.greendao.gen.FileUser2Dao;
import com.leng.fileupdate_new.greendao.gen.FileUserBeanMangerDao;
import com.leng.fileupdate_new.greendao.gen.FileUserRevocationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig fileUserDaoConfig;
    private final DaoConfig fileUser2DaoConfig;
    private final DaoConfig fileUserBeanMangerDaoConfig;
    private final DaoConfig fileUserRevocationDaoConfig;

    private final FileUserDao fileUserDao;
    private final FileUser2Dao fileUser2Dao;
    private final FileUserBeanMangerDao fileUserBeanMangerDao;
    private final FileUserRevocationDao fileUserRevocationDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        fileUserDaoConfig = daoConfigMap.get(FileUserDao.class).clone();
        fileUserDaoConfig.initIdentityScope(type);

        fileUser2DaoConfig = daoConfigMap.get(FileUser2Dao.class).clone();
        fileUser2DaoConfig.initIdentityScope(type);

        fileUserBeanMangerDaoConfig = daoConfigMap.get(FileUserBeanMangerDao.class).clone();
        fileUserBeanMangerDaoConfig.initIdentityScope(type);

        fileUserRevocationDaoConfig = daoConfigMap.get(FileUserRevocationDao.class).clone();
        fileUserRevocationDaoConfig.initIdentityScope(type);

        fileUserDao = new FileUserDao(fileUserDaoConfig, this);
        fileUser2Dao = new FileUser2Dao(fileUser2DaoConfig, this);
        fileUserBeanMangerDao = new FileUserBeanMangerDao(fileUserBeanMangerDaoConfig, this);
        fileUserRevocationDao = new FileUserRevocationDao(fileUserRevocationDaoConfig, this);

        registerDao(FileUser.class, fileUserDao);
        registerDao(FileUser2.class, fileUser2Dao);
        registerDao(FileUserBeanManger.class, fileUserBeanMangerDao);
        registerDao(FileUserRevocation.class, fileUserRevocationDao);
    }
    
    public void clear() {
        fileUserDaoConfig.getIdentityScope().clear();
        fileUser2DaoConfig.getIdentityScope().clear();
        fileUserBeanMangerDaoConfig.getIdentityScope().clear();
        fileUserRevocationDaoConfig.getIdentityScope().clear();
    }

    public FileUserDao getFileUserDao() {
        return fileUserDao;
    }

    public FileUser2Dao getFileUser2Dao() {
        return fileUser2Dao;
    }

    public FileUserBeanMangerDao getFileUserBeanMangerDao() {
        return fileUserBeanMangerDao;
    }

    public FileUserRevocationDao getFileUserRevocationDao() {
        return fileUserRevocationDao;
    }

}
